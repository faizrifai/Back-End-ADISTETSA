Install package pertama kali
1. aktivasi env
2. Jalankan perintah "pip install -r requirements.txt"

Aktifasi tiap env
activate.bat 

Run server
python manage.py runserver

Make Super Admin 
python manage.py createsuperuser

Migrate
python manage.py makemigrations
python manage.py migrate

Akun admin
username: arzelf
password: merdeka123 

Tambah Dummy Data
python manage.py setup_dummy_dataprofil



class DataBeasiswaGuruSerializer(serializers.ModelSerializer):
    class Meta:
        model = DataBeasiswaGuru
        fields = '__all__'

class DataBeasiswaKaryawanSerializer(serializers.ModelSerializer):
    class Meta:
        model = DataBeasiswaKaryawan
        fields = '__all__'





class DataBeasiswaGuruListView(APIView): 
    #authentication_classes = [TokenAuthentication]
    #permission_classes = [IsAuthenticated]

    def get(self, request, format=None):
        data_beasiswa_guru = DataBeasiswaGuru.objects.all()
        serializer = DataBeasiswaGuruSerializer(data_beasiswa_guru, many=True)
        return Response(serializer.data)

    def post(self, request, format=None):
        serializer = DataBeasiswaGuruSerializer(data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

class DataBeasiswaGuruDetailView(APIView):
    #authentication_classes = [TokenAuthentication]
    #permission_classes = [IsAuthenticated]

    def get_object(self, pk):
        try:
            return DataBeasiswaGuru.objects.get(pk=pk)
        except DataBeasiswaGuru.DoesNotExist:
            raise Http404

    def get(self, request, pk, format=None):
        beasiswa_guru = self.get_object(pk)
        serializer = DataBeasiswaGuruSerializer(beasiswa_guru)
        return Response(serializer.data)

    def put(self, request, pk, format=None):
        beasiswa_guru = self.get_object(pk)
        serializer = DataBeasiswaGuruSerializer(beasiswa_guru, data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

    def delete(self, request, pk, format=None):
        beasiswa_guru = self.get_object(pk)
        beasiswa_guru.delete()
        return Response(status=status.HTTP_204_NO_CONTENT)

class DataBeasiswaKaryawanListView(APIView): 
    #authentication_classes = [TokenAuthentication]
    #permission_classes = [IsAuthenticated]

    def get(self, request, format=None):
        data_beasiswa_karyawan = DataBeasiswaKaryawan.objects.all()
        serializer = DataBeasiswaKaryawanSerializer(data_beasiswa_karyawan, many=True)
        return Response(serializer.data)

    def post(self, request, format=None):
        serializer = DataBeasiswaKaryawanSerializer(data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

class DataBeasiswaKaryawanDetailView(APIView):
    #authentication_classes = [TokenAuthentication]
    #permission_classes = [IsAuthenticated]

    def get_object(self, pk):
        try:
            return DataBeasiswaKaryawan.objects.get(pk=pk)
        except DataBeasiswaKaryawan.DoesNotExist:
            raise Http404

    def get(self, request, pk, format=None):
        beasiswa_karyawan = self.get_object(pk)
        serializer = DataBeasiswaKaryawanSerializer(beasiswa_karyawan)
        return Response(serializer.data)

    def put(self, request, pk, format=None):
        beasiswa_karyawan = self.get_object(pk)
        serializer = DataBeasiswaKaryawanSerializer(beasiswa_karyawan, data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

    def delete(self, request, pk, format=None):
        beasiswa_karyawan = self.get_object(pk)
        beasiswa_karyawan.delete()
        return Response(status=status.HTTP_204_NO_CONTENT)





    path('data_beasiswa_guru', views.DataBeasiswaGuruListView.as_view()),
    path('data_beasiswa_guru/<int:pk>', views.DataBeasiswaGuruDetailView.as_view()),
    path('data_beasiswa_karyawan', views.DataBeasiswaKaryawanListView.as_view()),
    path('data_beasiswa_karyawan/<int:pk>', views.DataBeasiswaKaryawanDetailView.as_view()),

